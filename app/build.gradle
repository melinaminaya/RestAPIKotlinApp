plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.dokka' version '1.9.0'
//    id 'kotlin-kapt'
}

android {
    namespace 'br.com.autotrac.testnanoclient'
    compileSdk 33

    defaultConfig {
        applicationId "br.com.autotrac.testnanoclient"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0.00.02"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_16
        targetCompatibility JavaVersion.VERSION_16
    }
    kotlinOptions {
        jvmTarget = '16'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += '/META-INF/NOTICE.md'
            excludes += '/META-INF/LICENSE.md'
        }
    }
    viewBinding {
        enable = true
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            // Modify the APK name based on the variant (e.g., debug, release):${variant.name}
            def newApkName = "testnanoclient-${defaultConfig.versionName}-${variant.name}.apk"
            outputFileName = newApkName
        }
    }
}
tasks.named("dokkaHtml") {
    dokkaSourceSets {
        named("main") {
//            excludeDirectory = ["app/src/main/java/br/com/autotrac/testnanoclient/common/*"]
        }

    }
}
tasks.withType(dokkaHtml.getClass()).configureEach {
    pluginsMapConfiguration.set(["org.jetbrains.dokka.base.DokkaBase":"""{"separateInheritedMembers":true}"""])
}
dokkaHtml.configure{
    dokkaSourceSets {
        named("main") {
            skipDeprecated.set(true)
        }
    }
}
dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3:1.1.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'


    //NanoWebsocket
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.nanohttpd:nanohttpd-websocket:2.3.1'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    // RxJava
    implementation 'io.reactivex.rxjava3:rxjava:3.1.3'

    // RxAndroid for Android-specific bindings
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'

    implementation "androidx.navigation:navigation-compose:2.6.0"

    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:2.43.2"
//    kapt "com.google.dagger:hilt-android-compiler:2.43.2"
    // Retrofit2
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'


    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2" // Replace with the latest version

    //LiveData
    implementation 'androidx.compose.runtime:runtime-livedata:1.4.3'
    implementation 'androidx.compose.runtime:runtime:1.2.0-beta02'

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.1"
    implementation "androidx.lifecycle:lifecycle-service:2.6.1"
    implementation "androidx.lifecycle:lifecycle-process:2.6.1"

    implementation "com.google.accompanist:accompanist-swiperefresh:0.20.0"

    //Swagger - API Documentation
    implementation 'io.swagger.core.v3:swagger-core:2.1.10'
    implementation 'io.swagger.core.v3:swagger-annotations:2.1.10'

    //Dokka
//    implementation("org.jetbrains.dokka:kotlin-as-java-plugin:1.7.20")
    dokkaPlugin 'org.jetbrains.dokka:android-documentation-plugin:1.9.0'

}